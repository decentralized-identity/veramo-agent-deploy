version: 3.0

constants:
  baseUrl:
    $env: BASE_URL
  port:
    $env: PORT
  apiKey:
    $env: API_KEY
  secretKey:
    $env: SECRET_KEY
  agentPath:
    $env: AGENT_PATH
  messagingEndpoint:
    $env: MESSAGING_PATH
  databaseUrl:
    $env: DATABASE_URL
  cosmosTestNetworkAccountPrivateKey:
    $env: TEST_NETWORK_ACCOUNT_COSMOS_PRIVATE_KEY
  cosmosMainNetworkAccountPrivateKey:
    $env: MAIN_NETWORK_ACCOUNT_COSMOS_PRIVATE_KEY
  cheqdTestnetRpcUrl:
    $env: CHEQD_TESTNET_RPC_URL
  cheqdMainnetRpcUrl:
    $env: CHEQD_MAINNET_RPC_URL
  methods:
    - keyManagerGetKeyManagementSystems
    - keyManagerCreate
    - keyManagerGet
    - keyManagerDelete
    - keyManagerImport
    - keyManagerEncryptJWE
    - keyManagerDecryptJWE
    - keyManagerSign
    - keyManagerSharedSecret
    - keyManagerSignJWT
    - keyManagerSignEthTX
    - didManagerGetProviders
    - didManagerFind
    - didManagerGet
    - didManagerGetByAlias
    - didManagerCreate
    - didManagerGetOrCreate
    - didManagerImport
    - didManagerDelete
    - didManagerAddKey
    - didManagerRemoveKey
    - didManagerAddService
    - didManagerRemoveService
    - resolveDid
    - getDIDComponentById
    - discoverDid
    - dataStoreGetMessage
    - dataStoreSaveMessage
    - dataStoreGetVerifiableCredential
    - dataStoreSaveVerifiableCredential
    - dataStoreGetVerifiablePresentation
    - dataStoreSaveVerifiablePresentation
    - dataStoreORMGetIdentifiers
    - dataStoreORMGetIdentifiersCount
    - dataStoreORMGetMessages
    - dataStoreORMGetMessagesCount
    - dataStoreORMGetVerifiableCredentialsByClaims
    - dataStoreORMGetVerifiableCredentialsByClaimsCount
    - dataStoreORMGetVerifiableCredentials
    - dataStoreORMGetVerifiableCredentialsCount
    - dataStoreORMGetVerifiablePresentations
    - dataStoreORMGetVerifiablePresentationsCount
    - handleMessage
    - packDIDCommMessage
    - unpackDIDCommMessage
    - sendDIDCommMessage
    - sendMessageDIDCommAlpha1
    - createVerifiableCredential
    - createVerifiablePresentation
    - verifyCredential
    - verifyPresentation
    - createSelectiveDisclosureRequest
    - getVerifiableCredentialsForSdr
    - validatePresentationAgainstSdr

# Data base
dbConnection:
  $require: typeorm#DataSource
  $args:
    - type: postgres
      url:
        $ref: /constants/databaseUrl
      synchronize: false
      migrationsRun: true
      migrations:
        $require: '@veramo/data-store?t=object#migrations'
      logging: false
      ## Heroku Personal Account (Not required for team account)
      ssl:
        rejectUnauthorized: false
      entities:
        $require: "@veramo/data-store?t=object#Entities"

# Server configuration
server:
  baseUrl:
    $ref: /constants/baseUrl
  port:
    $ref: /constants/port
  use:
    # CORS
    - - $require: "cors?t=function#default"

    # Add agent to the request object
    - - $require: "@veramo/remote-server?t=function#RequestWithAgentRouter"
        $args:
          - agent:
              $ref: /agent

    # DID Documents
    - - $require: "@veramo/remote-server?t=function#WebDidDocRouter"

    # API base path
    - - /messaging
      - $require: "@veramo/remote-server?t=function#MessagingRouter"
        $args:
          - save: true
            metaData:
              type: DIDComm
              value: https

    # API base path
    - - /agent
      - $require: "@veramo/remote-server?t=function#apiKeyAuth"
        $args:
          - apiKey:
              $ref: /constants/apiKey
      - $require: "@veramo/remote-server?t=function#AgentRouter"
        $args:
          - exposedMethods:
              $ref: /constants/methods

    # Open API schema
    - - /open-api.json
      - $require: "@veramo/remote-server?t=function#ApiSchemaRouter"
        $args:
          - basePath:
              $ref: /constants/agentPath
            securityScheme: bearer
            apiName: Agent
            apiVersion: "1.0.0"
            exposedMethods:
              $ref: /constants/methods

    # Swagger docs
    - - /api-docs
      - $require: swagger-ui-express?t=object#serve
      - $require: swagger-ui-express?t=function#setup
        $args:
          - null
          - swaggerOptions:
              url: "/open-api.json"

    # Agent explorer
    - - $require: agent-explore?t=function#ExplorerRouter
        # $args:
        #   - - schemaUrl: https://example.com/open-api.json
        #       name: Example name
        #       apiKey: exampleKey123



  # Execute during server initialization
  init:
    - $require: "@veramo/remote-server?t=function#createDefaultDid"
      $args:
        - agent:
            $ref: /agent
          baseUrl:
            $ref: /constants/baseUrl
          messagingServiceEndpoint:
            $ref: /constants/messagingEndpoint

# Message handler plugin
messageHandler:
  $require: "@veramo/message-handler#MessageHandler"
  $args:
    - messageHandlers:
        - $require: "@veramo/did-comm#DIDCommMessageHandler"
        - $require: "@veramo/did-jwt#JwtMessageHandler"
        - $require: "@veramo/credential-w3c#W3cMessageHandler"
        - $require: "@veramo/selective-disclosure#SdrMessageHandler"

# DID resolvers
didResolver:
  $require: "@veramo/did-resolver#DIDResolverPlugin"
  $args:
    - resolver:
        $require: did-resolver#Resolver
        $args:
          - ethr:
              $ref: /ethr-did-resolver
            web:
              $ref: /web-did-resolver
            key:
              $ref: /did-key-resolver
            cheqd:
              $ref: /did-cheqd-resolver
            elem:
              $ref: /universal-resolver
            io:
              $ref: /universal-resolver
            ion:
              $ref: /universal-resolver
            sov:
              $ref: /universal-resolver

ethr-did-resolver:
  $require: ethr-did-resolver?t=function&p=/ethr#getResolver
  $args:
    - infuraProjectId: 5ffc47f65c4042ce847ef66a3fa70d4c

web-did-resolver:
  $require: web-did-resolver?t=function&p=/web#getResolver

universal-resolver:
  $require: "@veramo/did-resolver#UniversalResolver"
  $args:
    - url: https://dev.uniresolver.io/1.0/identifiers/

did-key-resolver:
  $require: '@veramo/did-provider-key?t=function&p=/key#getDidKeyResolver'

did-cheqd-resolver:
  $require: '@cheqd/did-provider-cheqd?t=function&p=/cheqd#getResolver'
  $args:
    - url: 'https://resolver.cheqd.net/1.0/identifiers/'

# Key Manager
keyManager:
  $require: "@veramo/key-manager#KeyManager"
  $args:
    - store:
        $require: "@veramo/data-store#KeyStore"
        $args:
          - $ref: /dbConnection
      kms:
        local:
          $require: "@veramo/kms-local#KeyManagementSystem"
          $args:
            - $require: '@veramo/data-store#PrivateKeyStore'
              $args:
                - $ref: /dbConnection
                - $require: '@veramo/kms-local#SecretBox'
                  $args:
                    - $ref: /constants/secretKey

# DID Manager
didManager:
  $require: "@veramo/did-manager#DIDManager"
  $args:
    - store:
        $require: "@veramo/data-store#DIDStore"
        $args:
          - $ref: /dbConnection
      #      defaultProvider: did:ethr:goerli
      defaultProvider: did:cheqd:testnet
      providers:
        did:ethr:
          $require: "@veramo/did-provider-ethr#EthrDIDProvider"
          $args:
            - defaultKms: local
              network: mainnet
              rpcUrl: https://mainnet.infura.io/v3/5ffc47f65c4042ce847ef66a3fa70d4c
              gas: 1000001
              ttl: 31104001
        did:ethr:goerli:
          $require: "@veramo/did-provider-ethr#EthrDIDProvider"
          $args:
            - defaultKms: local
              network: goerli
              rpcUrl: https://rinkeby.infura.io/v3/5ffc47f65c4042ce847ef66a3fa70d4c
              gas: 1000001
              ttl: 31104001
        did:cheqd:mainnet:
          $require: '@cheqd/did-provider-cheqd#CheqdDIDProvider'
          $args:
            - defaultKms: local
              cosmosPayerMnemonic: /constants/cosmosMainNetworkAccountPrivateKey
              networkType: mainnet
              rpcUrl: /constants/cheqdMainnetRpcUrl
          did:cheqd:testnet:
            $require: '@cheqd/did-provider-cheqd#CheqdDIDProvider'
            $args:
              - defaultKms: local
                cosmosPayerMnemonic: /constants/cosmosTestNetworkAccountPrivateKey
                networkType: testnet
                rpcUrl: /constants/cheqdTestnetRpcUrl
        did:web:
          $require: "@veramo/did-provider-web#WebDIDProvider"
          $args:
            - defaultKms: local
        did:key:
          $require: "@veramo/did-provider-key#KeyDIDProvider"
          $args:
            - defaultKms: local

didDiscovery:
  $require: '@veramo/did-discovery#DIDDiscovery'
  $args:
    - providers:
        - $require: '@veramo/did-manager#AliasDiscoveryProvider'
        - $require: '@veramo/data-store#DataStoreDiscoveryProvider'

# credential-LD Plugin
credentialIssuerLD:
  $require: '@veramo/credential-ld#CredentialIssuerLD'
  $args:
    - suites:
        - $require: '@veramo/credential-ld#VeramoEd25519Signature2018'
        - $require: '@veramo/credential-ld#VeramoEcdsaSecp256k1RecoverySignature2020'
      contextMaps:
        # The LdDefaultContext is a "catch-all" for now.
        - $require: '@veramo/credential-ld?t=object#LdDefaultContexts'
        - $require: '@transmute/credentials-context?t=object#contexts'
        #  others should be included here

# Agent
agent:
  $require: "@veramo/core#Agent"
  $args:
    - schemaValidation: false
      plugins:
        - $ref: /keyManager
        - $ref: /didManager
        - $ref: /didResolver
        - $ref: /didDiscovery
        - $ref: /messageHandler
        - $require: "@veramo/did-comm#DIDComm"
        - $require: '@veramo/credential-w3c#CredentialPlugin'
        - $ref: /credentialIssuerLD
        - $require: "@veramo/credential-eip712#CredentialIssuerEIP712"
        - $require: "@veramo/selective-disclosure#SelectiveDisclosure"
        - $require: "@veramo/data-store#DataStore"
          $args:
            - $ref: /dbConnection
        - $require: "@veramo/data-store#DataStoreORM"
          $args:
            - $ref: /dbConnection
